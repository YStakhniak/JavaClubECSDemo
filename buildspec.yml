version: 0.2

phases:
  pre_build:
    commands:
      - wget -O- https://apt.corretto.aws/corretto.key  | apt-key add -
      - add-apt-repository 'deb https://apt.corretto.aws  stable main'
      - apt-get update
      - apt-get install -y java-17-amazon-corretto-jdk
      - export JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto
      - export JDK_HOME=/usr/lib/jvm/java-17-amazon-corretto
      - export JRE_HOME=/usr/lib/jvm/java-17-amazon-corretto
      - |-
        for tool_path in "$JAVA_HOME"/bin/* "$JRE_HOME"/bin/*;
            do tool=`basename "$tool_path"`;
             if [ $tool != 'java-rmi.cgi' ];
             then
             update-alternatives --list "$tool" | grep -q "$tool_path" \
              && update-alternatives --set "$tool" "$tool_path";
             fi;
         done
      - java -version
      - echo Entered the build phase
      - mvn clean install
      - echo Logging in to Amazon ECR...
      - pip install --upgrade awscli==1.18.17
      - aws --version
      - $(aws ecr get-login --no-include-email --region eu-central-1)
      - REPOSITORY_URI=373796114179.dkr.ecr.eu-central-1.amazonaws.com/robot-registry
      - COMMIT_HASH=$(echo $CODEBUILD_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')


  build:
    commands:
      - echo Build started on `date`
      - echo getting the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - apt-get install jq -y
      - ContainerName="robot-prod-container-v2"
      - ImageURI=$(cat imageDetail.json | jq -r '.ImageURI')
      - printf '[{"name":"robot-prod-container-v2","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/robot-service.jar
  discard-paths: yes


